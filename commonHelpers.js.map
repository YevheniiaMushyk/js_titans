{"version":3,"file":"commonHelpers.js","sources":["../src/js/favorites.js","../src/js/favorites_quote.js","../src/js/favorites_list.js"],"sourcesContent":["const favburger = document.querySelector('.favheader__button');\nconst favmodal__button_close = document.querySelector(\n  '.favmodal__button_close'\n);\nconst favmodal = document.querySelector('.favmodal');\n\nfavburger.addEventListener('click', () => {\n  favmodal.showModal();\n});\n\nfavmodal__button_close.addEventListener('click', () => {\n  favmodal.close();\n});\n","import axios from 'axios';\nimport iziToast from 'izitoast';\n////////////////////////////////////////////////////////////////////////////////\nimport { loader, activeLoader, disactiveLoader } from './loader';\n/////////////////////////////////////////////////////////////////////////////////\n\nconst refs = {\n  quoteText: document.querySelector('.favorites-text'),\n  quoteAuthor: document.querySelector('.favorites-sub-title'),\n};\n\nconst BASE_URL = 'https://energyflow.b.goit.study/api/quote';\n\nasync function fetchQuoteData(url) {\n  try {\n    //////////////////////////////////////////////////////////////////////////////////////\n            activeLoader(loader);\n///////////////////////////////////////////////////////////////////////////////////////////\n    const savedLocalData = localStorage.getItem('quoteLocalData');\n    if (savedLocalData) {\n      const parsedLocalData = JSON.parse(savedLocalData);\n      const currentDate = getCurrentDate();\n      if (parsedLocalData.date === currentDate) {\n        renderQuoteCard(parsedLocalData.author, parsedLocalData.quote);\n        return;\n      }\n    }\n\n    const response = await axios.get(url);\n    const data = response.data;\n\n    if (data) {\n      const quoteData = {\n        quote: data.quote,\n        author: data.author,\n        date: getCurrentDate(),\n      };\n      localStorage.setItem('quoteLocalData', JSON.stringify(quoteData));\n      renderQuoteCard(quoteData.author, quoteData.quote);\n    }\n  } catch (error) {\n    iziToast.error('Failed to fetch quote data');\n    console.error(error);\n    /////////////////////////////////////////////////////////////////////////////\n  } finally {\n    disactiveLoader(loader);\n    /////////////////////////////////////////////////////////////////////////////\n}\n}\n\nfunction getCurrentDate() {\n  const date = new Date();\n  const day = String(date.getDate()).padStart(2, '0');\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const year = date.getFullYear();\n  return `${day}-${month}-${year}`;\n}\n\nfunction renderQuoteCard(author, quote) {\n  refs.quoteAuthor.textContent = author;\n  refs.quoteText.textContent = quote;\n}\n\nfetchQuoteData(BASE_URL);\n","import axios from 'axios';\nimport { openExerciseModal } from '../js/modal_video.js';\n\nconst API_URL = 'https://energyflow.b.goit.study/api/exercises/';\nconst list = document.querySelector('.workouts-list');\n\n// Функція для додавання нової карточки вправи за ідентифікатором\nfunction fetchWorkoutById(workoutId) {\n  return axios.get(`${API_URL}/${workoutId}`);\n}\n\nlet isFirstLoad = true;\n\nconst storedWorkoutIds =\n  JSON.parse(localStorage.getItem('ENERGY_FLOW_FAVORITES_KEY')) || [];\n\nif (storedWorkoutIds.length > 0) {\n  storedWorkoutIds.forEach(workoutId => {\n    fetchWorkoutById(workoutId)\n      .then(response => {\n        const workoutData = response.data;\n        addWorkoutCardToDOM(workoutData);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  });\n} else {\n  isFirstLoad = false;\n  showEmptyMessage();\n}\n\n// Функція для додавання нової карточки вправи до списку за _id\nfunction addNewWorkoutById(workoutId) {\n  const storedWorkoutIds =\n    JSON.parse(localStorage.getItem('ENERGY_FLOW_FAVORITES_KEY')) || [];\n  if (!storedWorkoutIds.includes(workoutId)) {\n    fetchWorkoutById(workoutId)\n      .then(response => {\n        const workoutData = response.data;\n        addWorkoutCardToDOM(workoutData);\n\n        storedWorkoutIds.push(workoutId);\n        localStorage.setItem(\n          'ENERGY_FLOW_FAVORITES_KEY',\n          JSON.stringify(storedWorkoutIds)\n        );\n\n        isFirstLoad = false;\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }\n}\n\n// Функція для додавання нової карточки вправи до списку\nfunction addWorkoutCardToDOM(workoutData) {\n  console.log(workoutData._id); // Виведе значення workoutData._id у консоль\n\n  const workoutCardMarkup = createWorkoutCardMarkup(workoutData);\n  list.insertAdjacentHTML('beforeend', workoutCardMarkup);\n  addRemoveButtonEventListener(workoutData);\n\n  // // Вибрати всі кнопки з класом .exercises-start-button\n  // const buttons = document.querySelectorAll('.exercises-start-button');\n\n  // buttons.forEach(button => {\n  //   // Отримати дані з атрибуту data-workout-data\n  //   const workoutDataString = button.dataset.workoutData;\n\n  //   // Обробити рядок JSON для отримання об'єкта JavaScript\n  //   const workoutDataObject = JSON.parse(workoutDataString);\n\n  //   console.log(workoutDataObject); // Вивести об'єкт в консоль\n\n  //   // Додати обробник події для кнопки\n  //   button.addEventListener('click', event => {\n  //     openExerciseModal(event, workoutDataObject);\n  //   });\n  // });\n}\n\n// Функція для додавання обробника події для кнопки видалення\n\nfunction addRemoveButtonEventListener(workoutData) {\n  const removeButtons = document.querySelectorAll(`.workout-card__remove-btn`);\n  removeButtons.forEach(removeButton => {\n    if (removeButton.getAttribute('data-workout-id') === workoutData._id) {\n      removeButton.addEventListener('click', () => {\n        removeWorkoutCardFromDOM(removeButton, workoutData._id);\n      });\n    }\n  });\n}\n\n// Функція для видалення карточки вправи зі сторінки та з локального сховища\nfunction removeWorkoutCardFromDOM(removeButton, workoutId) {\n  removeButton.closest('.exercises-item').remove();\n\n  const storedWorkoutIds =\n    JSON.parse(localStorage.getItem('ENERGY_FLOW_FAVORITES_KEY')) || [];\n  const updatedStoredWorkoutIds = storedWorkoutIds.filter(\n    id => id !== workoutId\n  );\n\n  // Оновлення storedWorkoutIds після видалення\n  localStorage.setItem(\n    'ENERGY_FLOW_FAVORITES_KEY',\n    JSON.stringify(updatedStoredWorkoutIds)\n  );\n\n  // Видалення іншого значення з localStorage, якщо це необхідно\n  localStorage.removeItem('workoutId');\n\n  // Встановлення isFirstLoad на false, якщо немає збережених вправ\n  if (updatedStoredWorkoutIds.length === 0) {\n    isFirstLoad = false;\n  }\n\n  // Виклик функції showEmptyMessage, якщо немає збережених вправ\n  if (updatedStoredWorkoutIds.length === 0) {\n    showEmptyMessage();\n  }\n}\n\nfunction createWorkoutCardMarkup(workoutData) {\n  const workoutCardMarkup = `\n    <li class=\"exercises-item\">\n      <div class=\"exercises-sub-title\">\n        <div class=\"exercises__workout-rating\">\n          <p class=\"exercises-workout\">workout</p>\n          <button class=\"workout-card__remove-btn\" data-workout-id=\"${\n            workoutData._id\n          }\">\n            <svg class=\"workout-card__icon\" width=\"16\" height=\"16\">\n              <use href=\"./img/icons.svg#icon-trash\"></use>\n            </svg>\n          </button>\n        </div>\n       \n    \n  <div class=\"exercises-start\">\n  <button class=\"exercises-start-button\" data-workout-data=\"${JSON.stringify(\n    workoutData\n  )}\">\n    <span class=\"exercises-start__text\">Start</span>\n    <svg\n      class=\"exercises-start__svg\"\n      width=\"13\"\n      height=\"13\"\n      stroke=\"rgb(27, 27, 27)\"\n    >\n      <use href=\"./img/icons.svg#icon-arrow\"></use>\n    </svg></button>\n  </div>\n\n      </div>\n      <div class=\"exercises-title\">\n        <svg class=\"exercises-title__svg\" width=\"24\" height=\"24\">\n          <use href=\"./img/icons.svg#icon-fav_run_man\"></use>\n        </svg>\n        <span class=\"exercises-title-text\">${workoutData.name}</span>\n      </div>\n      <div class=\"exercises-text\">\n        <p class=\"exercises-text__content\">\n          <span class=\"exercises-text__static\">Burned calories:</span>\n          <span class=\"exercises-text__dynamic\">${\n            workoutData.burnedCalories\n          } / 3 min</span>\n        </p>\n        <p class=\"exercises-text__content\">\n          <span class=\"exercises-text__static\">Body part:</span>\n          <span class=\"exercises-text__dynamic\">${workoutData.bodyPart}</span>\n        </p>\n        <p class=\"exercises-text__content\">\n          <span class=\"exercises-text__static\">Target:</span>\n          <span class=\"exercises-text__dynamic\">${workoutData.target}</span>\n        </p>\n      </div>\n    </li>\n  `;\n  // document.querySelectorAll('.exercises-start-button').forEach(button => {\n  //   if (button.dataset.workoutData === JSON.stringify(workoutData)) {\n  //     button.addEventListener('click', openExerciseModal);\n  //   }\n  // });\n\n  return workoutCardMarkup;\n}\n\nfunction showEmptyMessage() {\n  if (!isFirstLoad) {\n    list.innerHTML = `\n    <div class=\"empty-list\">\n      <img class=\"empty-item\"\n        srcset=\"./img/dumbbell@1x-min.png 1x, ./img/dumbbell@1x-min.png 2x\"\n        src=\"./img/dumbbell@1x-min.png\"\n        alt=\"dumbbell\"\n        width=\"85\"\n        height=\"52\"\n      />      \n      <p class=\"empty-message\">\n        It appears that you haven't added any exercises to your favorites yet. To get started, you can add exercises that you like to your favorites for easier access in the future.\n      </p>\n    </div>`;\n  }\n}\n"],"names":["favburger","favmodal__button_close","favmodal","refs","BASE_URL","fetchQuoteData","url","activeLoader","loader","savedLocalData","parsedLocalData","currentDate","getCurrentDate","renderQuoteCard","data","axios","quoteData","error","iziToast","disactiveLoader","date","day","month","year","author","quote","API_URL","list","fetchWorkoutById","workoutId","isFirstLoad","storedWorkoutIds","response","workoutData","addWorkoutCardToDOM","showEmptyMessage","workoutCardMarkup","createWorkoutCardMarkup","addRemoveButtonEventListener","removeButton","removeWorkoutCardFromDOM","updatedStoredWorkoutIds","id"],"mappings":"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"}